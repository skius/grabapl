
// some more syntax:

// ?ident marks a node as a context node that will implicitly be matched.
//fn takes_context_nodes(child: Integer, ?parent: Object, child -> parent: "child") {
//
//}

// actually, maybe this?
// since this way we have a match of (arg1, arg2) to (param1, param2) for explicitly passed params,
// and [ ] for implicitly matched graphs, like with `if shape`.
fn takes_context_nodes(child: Integer) [
    parent: Object,
    child -> parent: "child"
] -> (
    new_node: Integer,
    // child -> new_node: "grandchild"
) {
    // TODO: src/dst need to be node_id
    if shape [
      some_node: Integer,
      child -> some_node: "child2"
    ] {
        // TODO: how to access some_node

    }
    let map = add_node`Integer,1`();
    return (new_node: map.new);
}