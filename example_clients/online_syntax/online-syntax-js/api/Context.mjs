// generated by diplomat-tool
import wasm from "./diplomat-wasm.mjs";
import * as diplomatRuntime from "./diplomat-runtime.mjs";



export class Context {
    #i;
    get i() {
        return this.#i;
    }
    set i(value){
        this.#i = value;
    }
    /** @internal */
    static fromFields(structObj) {
        return new Context(structObj);
    }

    #internalConstructor(structObj) {
        if (typeof structObj !== "object") {
            throw new Error("Context's constructor takes an object of Context's fields.");
        }

        if ("i" in structObj) {
            this.#i = structObj.i;
        } else {
            throw new Error("Missing required field i.");
        }

        return this;
    }

    // Return this struct in FFI function friendly format.
    // Returns an array that can be expanded with spread syntax (...)
    _intoFFI(
        functionCleanupArena,
        appendArrayMap
    ) {
        return [this.#i]
    }

    static _fromSuppliedValue(internalConstructor, obj) {
        if (internalConstructor !== diplomatRuntime.internalConstructor) {
            throw new Error("_fromSuppliedValue cannot be called externally.");
        }

        if (obj instanceof Context) {
            return obj;
        }

        return Context.fromFields(obj);
    }

    _writeToArrayBuffer(
        arrayBuffer,
        offset,
        functionCleanupArena,
        appendArrayMap
    ) {
        diplomatRuntime.writeToArrayBuffer(arrayBuffer, offset + 0, this.#i, Int32Array);
    }

    // This struct contains borrowed fields, so this takes in a list of
    // "edges" corresponding to where each lifetime's data may have been borrowed from
    // and passes it down to individual fields containing the borrow.
    // This method does not attempt to handle any dependencies between lifetimes, the caller
    // should handle this when constructing edge arrays.
    static _fromFFI(internalConstructor, primitiveValue) {
        if (internalConstructor !== diplomatRuntime.internalConstructor) {
            throw new Error("Context._fromFFI is not meant to be called externally. Please use the default constructor.");
        }
        let structObj = {};
        structObj.i = primitiveValue;

        return new Context(structObj);
    }


    static init() {
    wasm.Context_init();

        try {}

        finally {
        }
    }

    static parse(src) {
        let functionCleanupArena = new diplomatRuntime.CleanupArena();

        const srcSlice = diplomatRuntime.DiplomatBuf.str8(wasm, src);
    wasm.Context_parse(...srcSlice.splat());

        try {}

        finally {
            functionCleanupArena.free();

        }
    }

    constructor(structObj) {
        return this.#internalConstructor(...arguments)
    }
}